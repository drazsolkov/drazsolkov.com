<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hard on Denis Razsolkov</title>
    <link>http://localhost:1313/tags/hard/</link>
    <description>Recent content in Hard on Denis Razsolkov</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 05 Mar 2025 13:40:42 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/hard/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>4. Median of Two Sorted Arrays - Leet Code</title>
      <link>http://localhost:1313/posts/4.medianoftwosortedarrays/</link>
      <pubDate>Wed, 05 Mar 2025 13:40:42 +0100</pubDate>
      <guid>http://localhost:1313/posts/4.medianoftwosortedarrays/</guid>
      <description>Problem Description Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.&#xA;The overall run time complexity should be O(log (m+n)).&#xA;Example 1: Input: nums1 = [1,3], nums2 = [2] Output: 2.00000 Explanation: merged array = [1,2,3] and median is 2. Example 2: Input: nums1 = [1,2], nums2 = [3,4] Output: 2.50000 Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.</description>
    </item>
    <item>
      <title>42. Trapping Rain Water - LeetCode</title>
      <link>http://localhost:1313/posts/42.trappingrainwater/</link>
      <pubDate>Tue, 25 Feb 2025 14:01:44 +0100</pubDate>
      <guid>http://localhost:1313/posts/42.trappingrainwater/</guid>
      <description>Problem Description Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.&#xA;Example 1: Input: height = [0,1,0,2,1,0,1,3,2,1,2,1] Output: 6 My Idea For each position in the resulting figure the amount of water that can be trapped is the minimum of the two highest peaks to the left and right minus the height at the position itself.</description>
    </item>
    <item>
      <title>85. Longest Rectangle in Histogram - Leet Code</title>
      <link>http://localhost:1313/posts/85.longestrectangleinhistogram/</link>
      <pubDate>Tue, 08 Oct 2024 11:08:08 +0200</pubDate>
      <guid>http://localhost:1313/posts/85.longestrectangleinhistogram/</guid>
      <description>Problem Description Given an array of integers heights, representing the histogram&amp;rsquo;s bar height, where the width of each bar is 1, return the area of the largest rectangle in the histogram.&#xA;Example 1: Input: heights = [2,1,5,6,2,3] Output: 10 Explanation: The above is a histogram where width of each bar is 1. The largest rectangle is shown in the red area, which has an area = 10 units. Example 2: Input: heights = [2,4] Output: 4 My Idea Here we once more make use of a stack to keep track of the bars.</description>
    </item>
  </channel>
</rss>
