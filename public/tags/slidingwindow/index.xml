<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SlidingWindow on Denis Razsolkov</title>
    <link>http://localhost:1313/tags/slidingwindow/</link>
    <description>Recent content in SlidingWindow on Denis Razsolkov</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 13 Mar 2025 12:58:41 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/slidingwindow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3.Longest Substring Without Repeating Character - Leet Code</title>
      <link>http://localhost:1313/posts/3.longestsubstringwithoutrepeatingcharacter/</link>
      <pubDate>Thu, 13 Mar 2025 12:58:41 +0100</pubDate>
      <guid>http://localhost:1313/posts/3.longestsubstringwithoutrepeatingcharacter/</guid>
      <description>Problem Description Given a string s, find the length of the longest substring without duplicate characters.&#xA;Example 1: Input: s = &amp;quot;abcabcbb&amp;quot; Output: 3 Example 2: Input: s = &amp;quot;pwwkew&amp;quot; Output: 3 My Idea The idea here is to utilize the Sliding Window approach. In every step we increase the window to the right. If we encounter a character that&amp;rsquo;s already a part of the current substring (window), we shorten from the left until the original instance is just outside of the window.</description>
    </item>
    <item>
      <title>121. Best Time to Buy and Sell Stock - LeetCode</title>
      <link>http://localhost:1313/posts/121.besttimetobuyandsellstock/</link>
      <pubDate>Thu, 06 Mar 2025 13:33:46 +0100</pubDate>
      <guid>http://localhost:1313/posts/121.besttimetobuyandsellstock/</guid>
      <description>Problem Description You are given an array prices where prices[i] is the price of a given stock on the i-th` day.&#xA;You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.&#xA;Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.&#xA;Example 1: Input: prices = [7,1,5,3,6,4] Output: 5 Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.</description>
    </item>
  </channel>
</rss>
